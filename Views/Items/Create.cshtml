@model CoffeeShopOnline.Models.ItemViewModel
@{
    ViewBag.Title = "Create";
}
<script language="JavaScript" type="text/javascript" src="/js/jquery-1.2.6.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<h2>Add a new Item</h2>
<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSaves").click(function () {
            SaveItem();
        });
    });

    function ResetItem() {
        $("#CategoryId").val("");
        $("#ItemCode").val("");
        $("#ItemName").val("");
        $("#Description").val("");
        $("#ItemPrice").val("");
        $("#ImagePath").val("");
        $("#Quantity").val("");
        $("#Promo").val("");
        $("#PromoPrice").val("");



    }
    function SaveItem() {
        var formData = new FormData();
        formData.append("CategoryId", $("#CategoryId").val());
        formData.append("ItemCode", $("#ItemCode").val());
        formData.append("ItemName", $("#ItemName").val());
        formData.append("Description", $("#Description").val());
        formData.append("ItemPrice", $("#ItemPrice").val());
        formData.append("Quantity", $("#Quantity").val());
        formData.append("Promo", $("#Promo").val());
        formData.append("PromoPrice", $("#PromoPrice").val());

        formData.append("ImagePath", $("#ImagePath").get(0).files[0]);

        $.ajax({
            async: true,
            dataType: 'JSON',
            type: 'POST',
            contentType: false,
            processData: false,
            url: '/Items/Create',
            data: formData,
            success: function (data) {
                if (data.Success) {
                    alert(data.Message);
                    ResetItem();
                }

            },
            error: function () {
                alert("There is some problem to add item")
            }
        });

       

    }
    $("#ISEnroled").click(function () {
        var isChecked = document.getElementById('ISEnroled').checked;
        $("#hdnIsEnroll").val(isChecked);
    });
</script>
<div class="container">
    <div class="col-md-4">
        <div class="form-group">
            Category:
            @Html.DropDownListFor(model => model.CategoryId
       , new SelectList(Model.CategorySelectListItems, "Value"
       , "Text"), new { @class = "form-control" })

        </div>
    </div>


    <div class="col-md-4">
        <div class="form-group">
            Item Name:
            @Html.TextBoxFor(expression: model => model.ItemName,
           htmlAttributes: new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            Item Description:
            @Html.TextBoxFor(expression: model => model.Description,
           htmlAttributes: new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            Quantity:
            @Html.TextBoxFor(expression: model => model.Quantity,
           htmlAttributes: new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            Item Price:
            @Html.TextBoxFor(expression: model => model.ItemPrice,
           htmlAttributes: new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>
    <div class="col-md-4">
        <div class="form-group">
            Have a lower prize at Business Lunch?
            @Html.CheckBoxFor(m => m.Promo, new { @class = "css-checkbox9 all_check" })
            <br />
            Promo Price:
            @Html.TextBoxFor(expression: model => model.PromoPrice,
        htmlAttributes: new { @class = "form-control", autocomplete = "Off" })
        </div>
    </div>

    <div class="col-md-4">
        <div class="form-group">
            ImagePath:
            @Html.TextBoxFor(expression: model => model.ImagePath,
           htmlAttributes: new { type = "file", @class = "form-control" })
        </div>
    </div>

    <div>
        <input type="button" value="Save" name="save " class="btn btn-primary" id="btnSaves" />
        &nbsp;
        <input type="button" value="Reset" name="reset" class="btn btn-danger" />
        @Html.ActionLink("Back to List", "Index")

    </div>
</div>
